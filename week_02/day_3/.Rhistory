weather_forecast <- list(
Thursday = list(
temperature = 17, rain_chance = 58, wind_speed = 10),
Friday = list(
temperature = 16, rain_chance = 67, wind_speed = 11),
Saturday = list(
temperature = 15, rain_chance = 70, wind_speed = 10)
)
weather_forecast$Thursday$rain_chance
weather_forecast$Friday$wind_speed
weather_forecast$Thursday$temperature
temp_m <- matrix(c(18, 17, 16, 17, 17, 18, 18, 19, 18, 19, 19, 19, 19, 19), nrow = 2, ncol = 7)
temp_m
temp_m <- matrix(c(18, 17, 16, 17, 17, 18, 18, 19, 18, 19, 19, 19, 19, 19), nrow = 2, ncol = 7)
temp_m
temp_m[1:2, c(1, 3, 5)]
temp_m[1:2, c(1, 3, 5)]
temp_m[2,3]
temp_m[2,]
temp_m[1:2, c(1, 3, 5)]
strange_function <- function(strange_input) {
if (is.character(strange_input)){
return(paste0("The answer is:", strange_input))
} else {
if (strange_input < 10) {
return(strange_input)
} else {
return(strange_input / 10)
}
}
}
strange_function("dsjlj")
strange_function <- function(strange_input) {
if (is.character(strange_input)){
return(paste0("The answer is:", strange_input))
} else {
if (strange_input < 10) {
return(strange_input)
} else {
return(strange_input / 10)
}
}
}
strange_function("dsjlj")
strange_function(3.2)
strange_function <- function(strange_input) {
if (is.character(strange_input)){
return(paste0("The answer is:", strange_input))
} else {
if (strange_input < 10) {
return(strange_input)
} else {
return(strange_input / 10)
}
}
}
strange_function("dsjlj")
strange_function(3.2)
strange_function(pi)
strange_function <- function(strange_input) {
if (is.character(strange_input)){
return(paste0("The answer is:", strange_input))
} else {
if (strange_input < 10) {
return(strange_input)
} else {
return(strange_input / 10)
}
}
}
strange_function("dsjlj")
strange_function(3.2)
strange_function(pi)
strange_function(10 * pi)
strange_function <- function(strange_input) {
if (is.character(strange_input)){
return(paste0("The answer is:", strange_input))
} else {
if (strange_input < 10) {
return(strange_input)
} else {
return(strange_input / 10)
}
}
}
strange_function("dsjlj")
strange_function(3.2)
strange_function(pi)
strange_function(10 * pi)
strange_function(76)
strange_function(2507)
?all
vec1 <- c(1, 5, 7, 3)
vec2 <- c(1, 5, 7, 3)
sort(vec1) == sort(vec2)
comp_func <- function(vec1, vec2){
if (
all(sort(vec1) == sort(vec2))
) {
if (
all(vec1 == vec2)
){
return("Exactly the same")
} else {
return("The same")
}
} else {
return("Different")
}
}
vec1 <- c(1, 5, 7, 3)
vec2 <- c(1, 5, 7, 3)
comp_func(vec1, vec2)
comp_func <- function(vec1, vec2){
if (
all(sort(vec1) == sort(vec2))
) {
if (
all(vec1 == vec2)
){
return("Exactly the same")
} else {
return("The same")
}
} else {
return("Different")
}
}
vec1 <- c(1, 5, 7, 3)
vec2 <- c(1, 5, 7, 3)
comp_func(vec1, vec2)
vec1 <- c(5, 7, 3, 1)
vec2 <- c(1, 5, 7, 3)
comp_func(vec1, vec2)
comp_func <- function(vec1, vec2){
if (
all(sort(vec1) == sort(vec2))
) {
if (
all(vec1 == vec2)
){
return("Exactly the same")
} else {
return("The same")
}
} else {
return("Different")
}
}
vec1 <- c(1, 5, 7, 3)
vec2 <- c(1, 5, 7, 3)
comp_func(vec1, vec2)
vec1 <- c(5, 7, 3, 1)
vec2 <- c(1, 5, 7, 3)
comp_func(vec1, vec2)
vec1 <- c(5, 7, 3)
vec2 <- c(1, 5, 7, 3)
comp_func(vec1, vec2)
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- append(thingy, as.character(x * y))
}
print(paste(thingy, sep = ", "))
}
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- append(thingy, as.character(x * y))
}
print(paste(thingy, sep = ",  "))
}
library(tidyverse)
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- append(thingy, as.character(x * y))
}
print(str_c(thingy, sep = ",  "))
}
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- append(thingy, as.character(x * y))
}
text_thingy <- str_c(thingy, sep = ", ")
print(text_thingy)
}
thingy <- c()
for (y in 1:12) {
thingy <- append(thingy, as.character(x * y))
}
text_thingy <- str_c(thingy, sep = ", ")
text_thingy
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- append(thingy, as.character(x * y))
}
text_thingy <- str_c(as.character(thingy), sep = ", ")
print(text_thingy)
}
?str_c
thingy
str_c(as.character(thingy), sep = ", ")
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- paste(thingy, as.character(x * y), sep = ", ")
}
print(text_thingy)
}
paste(thingy, as.character(x * y), sep = ", ")
thingy <- c()
for (x in 1:12) {
thingy <- c()
for (y in 1:12) {
thingy <- paste(thingy, as.character(x * y), sep = ", ")
}
print(thingy)
}
for (x in 1:12) {
thingy <- c(as.character(x * 1))
for (y in 2:12) {
thingy <- paste(thingy, as.character(x * y), sep = ", ")
}
print(thingy)
}
thingy <- matrix(nrow = 12, ncol = 12)
for (x in 1:12) {
for (y in 2:12) {
thingy[x, y] <- x * y
}
}
thingy
thingy <- matrix(nrow = 12, ncol = 12)
for (x in 1:12) {
for (y in 1:12) {
thingy[x, y] <- x * y
}
}
thingy
?distinct
?unique
?count
?tidyverse::count
library(tidyverse)
?count
?sort
ascii_hist <- function(maybe_art){
unique_elements <- sort(unique(maybe_art))
count_each <- rep(0, length(unique_elements))
for (i in maybe_art) {
for (x in 1:length(unique_elements)) {
if (i == unique_elements[x]) {
count_each[x] <- count_each[x] + 1
}
}
}
for (x in 1:length(unique_elements)) {
cat(unique_elements, " | ")
for (y in 1:count_each[x]) {
cat("*")
}
cat("\n")
}
}
weird_input <- c(1, 2, 3, 4, 5, 1, 3, 4, 5, 1, 3, 4, 4, 3, 3, 3, 3)
ascii_hist(weird_input)
ascii_hist <- function(maybe_art){
unique_elements <- sort(unique(maybe_art))
count_each <- rep(0, length(unique_elements))
for (i in maybe_art) {
for (x in 1:length(unique_elements)) {
if (i == unique_elements[x]) {
count_each[x] <- count_each[x] + 1
}
}
}
for (x in 1:length(unique_elements)) {
cat(unique_elements[x], " | ")
for (y in 1:count_each[x]) {
cat("*")
}
cat("\n")
}
}
weird_input <- c(1, 2, 3, 4, 5, 1, 3, 4, 5, 1, 3, 4, 4, 3, 3, 3, 3)
ascii_hist(weird_input)
ascii_hist <- function(maybe_art){
unique_elements <- sort(unique(maybe_art))
count_each <- rep(0, length(unique_elements))
for (i in maybe_art) {
for (x in 1:length(unique_elements)) {
if (i == unique_elements[x]) {
count_each[x] <- count_each[x] + 1
}
}
}
for (x in 1:length(unique_elements)) {
cat(unique_elements[x], "| ")
for (y in 1:count_each[x]) {
cat("*")
}
cat("\n")
}
}
weird_input <- c(1, 2, 3, 4, 5, 1, 3, 4, 5, 1, 3, 4, 4, 3, 3, 3, 3)
ascii_hist(weird_input)
?table
table(weird_input)
table(weird_input)
